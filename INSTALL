#!/usr/bin/env bash

# function to copy at top and use ech0 (rather than ech1
function ech0 () {     # turn on debugging with  export ech0=ON
  if [ ".$ech0" == ".ON" ]; then
    echo $@
  fi  
}

##  end of internal functions

## start of executable code

echo "Checking ..."
ech0 "\$rchbls is $rchbls"

if [ ! -d $rchbls ]; then
  echo "execlib directory ($rchbls) does not exist. "
  echo "It should be created by 'setvar' script.  Please"
  echo "evaluate or run 'set' var.  Quitting now, no work done."
  return
fi

if [ ! -e $rchbls/builddir ]; then
  echo "file $rchbls/builddir created by 'setvar' is not available"
  echo "Please evaluate.  Quitting now, no work done."
  return
fi

if [ ! -e $rchbls/execdir ]; then
  echo "file $rchbls/execdir created by 'setvar' is not available"
  echo "Please evaluate.  Quitting now, no work done."
  return
fi 

read -r build_dir rest < $rchbls/builddir
read -r exec_dir rest < $rchbls/execdir

if [ ".$rchbls" != ".$exec_dir" ]; then
  echo "Mismatch global var ($rchbls) and "
  echo "           execlib  ($exec_dir)"
  echo "Leaving -- no work done."
  return
fi

if [ ".$PWD" != ".$build_dir" ]; then
  echo "Mismatch   pwd      ($PWD) and "
  echo "           buildlib ($build_dir)"
  echo "Leaving -- no work done."
  return
fi

cat << EOF-exec-lib
\$rchbls is $rchbls"
build_lib=$build_dir
exec_lib=$exec_dir 

Execution lib dir is : "$exec_lib"  (about to be populated.)

EOF-exec-lib

echo
echo -n "Is that correct?  y/Y to continue :"
read -r answer rest 

if [ ".$answer" = ".y" ] || [ ".$answer" == ".Y" ]; then
  echo "answer ($answer), On we go!"
else
  echo "answer ($answer) NOT 'y' or 'Y', Leaving -- nothing done."
  return
fi

#cd $build_lib                  # get to right dir to do work

echo "Your original PATH"
echo $PATH
echo
echo "Start the copy/gen of $exec_lib"


BooHoo="no"
echo "# Message of possible INSTALL copy errors." > $exec_lib/BooHoo
echo "  Search for 'BooHoo' to find concerns." >> $exec_lib/BooHoo
date >> $exec_lib/BooHoo

while read -r parm_line ; do
# echo "$parm_line"  >> $exec_lib/BooHoo
# echo "cpit $parm_line "
# cpit "$parm_line"
  IFSsave=$IFS
  IFS=" "
  read -r first_word rest <<< $parm_line 
  IFS=$IFSsave

# echo "$first_word   ${first_word:0:1}"
  if [ ".${first_word:0:1}" == ".#" ]; then
    echo "comment:$parm_line" >> $rchbls/BooHoo
  else
    # first check for existence of input
    echo "copyit :$parm_line" >> $rchbls/BooHoo
    if [ ! -e $first_word ]; then
      echo "BooHoo: $first_word does NOT exist. <<===" >> $rchbls/BooHoo
      BooHoo="yes"
    else
      echo "cp -pv $first_word $rchbls/$first_word" >> $rchbls/BooHoo
      cp -pv $first_word $rchbls/$first_word
      ccrc=$?
      if [ $ccrc -eq 0 ]; then
        echo "$1 copied (rc=$ccrc) to "$exec_lib >>$exec_lib/BooHoo
      else
        echo "BooHoo -- cp ret code ($ccrc) check $1 <<++++" >> $exec_lib/BooHoo
        BooHoo="yes"
      fi
    fi 
  fi 
done < $build_dir/INSTALLmbrs

echo
echo "done with the copy/gen of $exec_lib"
echo
ls -A $exec_lib

if [ ".$BooHoo" == ".no" ]; then
  echo
  echo "exec-lib ($exec_lib) is built with NO copy errors."
  echo "Messages are in $exec_lib/BooHoo."
else
  echo
  echo "**************************************************"
  echo "**************************************************"
  echo "exec-lib ($exec_lib) generation HAD copy errors. <<=====:"
  echo "Review messages in $exec_lib/BooHoo."
  echo "**************************************************"
  echo "**************************************************"
fi

cat << EOF-exit

  You are now ready to activate the 'whereisit' environment.
   a.  cd  your-execlib path             (  cd $rchbls )
   b.  '. ./engage'                       that's it.

   You may back off the environment with '. delpath $exec_lib '

   To later re-invoke the environment,  a. and b. above.

Welcome, Good Luck and Thanks
Robert C. Hansen
EOF-exit
return
