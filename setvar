#!/usr/bin/env bash

# debugging echo code
function ech0 () {     # turn on debugging with  export ech0=ON
  if [ ".$ech0" == ".ON" ]; then
    echo $@
  fi  
}

#weak test to see if this is a build-lib
if [ ! -e  $PWD/builddir ]; then
clear
cat << EOF-nobuilddir
  There seems to be no builddir member of your current pwd.
You are in  $PWD.

  Please cd to your desired build-lib and reissue  '. ./setvar'

  Quiting, nothing changed.
EOF-nobuilddir
return
fi

### Make sure you are where you want to be.
IFSsave=$IFS
IFS=" "
read -r build_dir rest < builddir
IFS=$IFSsave
clear
cat << EOF-hello
# Hello and welcome to Robert C. Hansen (rch) 'whereis' setup.

You should be starting out with your pwd being your build-lib.
You are currently in   '$PWD'.  

answer 'y' or 'Y' to the prompt. 

EOF-hello
# remember you are in biuilddir 


IFSsave=$IFS
IFS=" "
echo -n "Is your pwd set correctly to you desired buildlib (y/Y):"
read -r  answer rest
IFS=$IFSsave

if [ ".$answer" == ".y" ] || [ ".$answer" == ".Y" ]; then
cat << EOF-execset
    
    You will now set the single global variable used by this
 'whereis' system ( \$rchbls ).  It will ALSO be the directory
 for the execution library.  The current value is 
                      $default.
 Should you want      $HOME/$default 
 Hit CR at the prompt.  Otherwise  key in the FULL desired
 directory name.

EOF-execset
else
  echo "answer ($answer) not 'y' or 'Y'.  No Changes made."
  echo "Please reset to  'cd appropriate'  and reissue '. ./setvar'."
  echo "Nothing done, I quit."
  return
fi

IFSsave=$IFS
IFS=" "
echo "Enter the value for \$rchbls variable(CR for default): "
echo -n "===>>:"
read -r mychoice rest
IFS=$IFSsave

#nclear

if [ ".$mychoice" == "." ]; then        # take the default
  thechoice=$HOME/$default
  echo "You have chosen to take the default"
  echo "default ==>>:"$thechoice
  echo
else
  thechoice=$mychoice
  echo "You have entered:"$thechoice
  echo
fi

if [ -e $mychoice ]; then
  echo "$mychoice already Exists.  You will be possibly"
  echo "overwritting existing. Quiting, nothing changed."
  return
fi

# Setting the global variable  $rchbls
#echo "\$thechoice = $thechoice"
export rchbls=$thechoice                # set it $rchbls
#echo "\$rchbls = $rchbls"

mkdir -pv $rchbls                   # insure existence of execlib
# Setting builddir values         
echo "$PWD" > $rchbls/builddir
echo "Gentime is "`date` >> $rchbls/builddir
cat builddir >> $rchbls/builddir
echo "$rchbls/builddir created."
#echo "== $rchbls/builddir == start =========================="
#cat $rchbls/builddir
#echo "== $rchbls/builddir == end   =========================="

# Setting execdir values         
#echo "$thechoice" #> $rchbls/execdir          #set value
echo "$thechoice" > $rchbls/execdir          #set value
echo "Gentime is "`date` >> $rchbls/execdir  # timestamp
cat execdir >> $rchbls/execdir               # put back in old 
echo "$rchbls/builddir created."
#echo "== $rchbls/execdir == start============================="
#cat $rchbls/execdir
#echo "== $rchbls/execdir == end  ============================="
IFSsave=$IFS
IFS=" "
read -r build_dir rest < $rchbls/builddir
read -r exec_dir rest  < $rchbls/execdir
IFS=$IFSsave
  echo "--"
  echo "By the way,  rchbls  is derived as the initials of "
  echo "me - Robert C. Hansen  and Benjamin Lafayette Sisko."

cat << EOF-setvar

  You should now be set up to create the exec-lib.

  \$rchbls   = $rchbls
  build-lib = $build_dir
  exec-lib  = $exec_dir

Continue with '. ./INSTALL' to populate the exec-lib.

EOF-setvar
return
