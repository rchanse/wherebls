#!/usr/bin/env bash

### Make sure you are where you want to be.
read build_dir rest < builddir
clear
cat << EOF-hello
  Hello and welcome to Robert C. Hansen (rch) 'whereis' setup.

You should be starting out with your pwd being your build-lib.
The first word of builddir member should MATCH the directory
of the build-lib you desire.
You are currently in '$PWD'.  
The builddir member of this directory says '$build_dir'.

EOF-hello
echo -n "Is this your desire? (CR - to sync/go on, other quits: "
read  answer rest
if [ ".$answer" == "." ]; then
  cp -p builddir /tmp/tempname$USER
  echo "$PWD" > builddir                    # write build_dir
  date >> builddir                          # timestamp it
  cat /tmp/tempname$USER >> builddir        # put back orig at end
# echo "==============="
# cat builddir
# echo "==============="
# echo "GOOD GOOD,  Onward. "
else
  echo "answer ($answer) not 'CR'.  No Changes made."
  echo "Please reset and  'cd appropriate' "
  echo "OK, now I really quit."
  return
fi

read build_dir rest < $PWD/builddir
echo "builddir member indicate build-dir is $build_dir."
echo "This is word 1 on line 1 of $build_dir/builddir."

if [ ".$PWD" != ".$build_dir" ]; then
  echo "Mismatch MISmatch MISMATCH misMATCH mismatch"
  echo "Please edit $PWD/builddir and correct."
  echo "Then you can rerun '. ./setvar' "
  echo "Nothing done, I quit."
  return
fi

read -r default rest < $build_dir/execdir
cat << EOF-execset
    
    You will now set the single global variable used by this
 'whereis' system ( \$rchbls ).  It will ALSO be the directory
 for the execution library.  The current value is $default.
 Should you want $HOME/$default hit CR at the prompt.  Other
 key in the FULL desired directory name.

EOF-execset
echo -n "Enter the value for \$rchbls variable(CR for default): "
read mychoice rest

if [ ".$mychoice" == "." ]; then        # take the default
  echo "You have chosen to take the default : "$HOME/$default
  thechoice=$HOME/$default
else
  thechoice=$mychoice
fi

# Setting global variable $rchbls
cp $build_dir/execdir /tmp/tempname$USER   #save orig
echo "$thechoice" > $build_dir/execdir     #set value
echo "Gentime is "`date` >> $build_dir/execdir    # timestamp
cat /tmp/tempname$USER >> $build_dir/execdir # put back in old
    echo
#   echo "\$rchbls = $rchbls,\$thechoice = $thechoice  BEFORE "
    echo "\$rchbls = $rchbls                      BEFORE "
    read rchbls rest < $build_dir/execdir      # get it
    export rchbls=$thechoice                   # set it $rchbls
    echo
    echo "and now \$rchbls is : $rchbls"
    echo
    echo "You may run this script multiple times."
    echo "The value for \$rchbls will be set by the last run."
    echo
    echo "By the way, 'rchbls' is derived as the initials of "
    echo "me - Robert C. Hansen  and Benjamin Lafayette Sisko."

read build_dir rest < $build_dir/builddir
read exec_dir rest  < $build_dir/execdir
cat << EOF-setvar

  You should now be set up to create the exec-lib.

  \$rchbls = $rchbls
  build-lib = $build_dir
  exec-lib = $exec_dir
EOF-setvar

if [ ! -d  $exec_dir ]; then
  echo "$exec_dir does NOT exist YET, go onto  '. ./INSTALL' "
else
  echo "$exec_dir EXISTs, best look at it. Might be empty."
fi
