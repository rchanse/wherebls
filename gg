#!/usr/bin/env bash

# debugging I left in the debugging echos but left off uuuuuent it to turn them on  BEFORE issuing ff  issue

#   export ech0=ON  
function ech0 () {               # debugging echo
  if [ ".$ech0" == ".ON" ]; then
    echo $@
  fi  
}

function nop() {    # a NO-OP to make code more readable later
#  VERY helpful making easier to aid in  if-then-else-fi blocks
#  if condition ; then         remember   if cond ; then
#     nop                                    code
# NOTE:NOTE - much easier to use true  NOTE:NOTE
#  else                                   else
#     nop                                 fi      will gen synax error
#  fi
#
  return 0
}

# newcessary for this to work
# script gg - this guy
# script ggwork sub function to do the work
# directory ~/bin/gg_acrolist_dir - directory containing gnamelist-s
# file ~/bin/gg_acroname  - file contain current gnamelist


# the code below is a function to do the g - work
# note it has several internal subfunctions.
function ggwork () {

# list functions

# checking for an integer type value  found linuxquestion
function is_integer() {
  printf "%d" $1 > /dev/null 2>&1
  return $?
}

# checking for an integer is in range  between 1 and nl
function in_range() {
  if [ $1 -ge 1 ] && [ $1 -le $nl ] ; then
    return 0
  else
    return 1 
  fi
}

# used in show option to list NAMES_list entries and their assoc number
function list_by_number() { 
ech0 "List of names file " $NAMES_list "has" $nl "entries"

  if [ "$1." == '.' ]; then
    let start=1;let end=$nl;let index=1
  else
    let start=$1;let end=$start+9  # arrange for 10 lines
    if [ $end -gt $nl ]; then
      let end=$nl
    fi
    let index=$start
  fi
  echo "Range of entries from $start to $end"

  while [ $index -le $end ]; do
    thefile=`head -n$index $NAMES_list  | tail -n1`
    ech0 ">>"  $index  $thefile
    let index=$index+1
  done
 }

# end of functions

# start of ggwork code
ech0 " ggwork  $1 $2 $3 $4 $5"
acroparm=$1
sub1=$2
sub2=$3
sub3=$4
sub4=$5
ech0 " 1 $sub1, 2 $sub2, 3 $sub3, 4 $sub4"
read -r exec_lib rest < $rchbls/execdir 
echo "gnamelist is  $exec_lib/gg_acrolist_dir/$acroparm "

# shorten gnamelist to $NAMES_list
NAMES_list=$exec_lib/gg_acrolist_dir/$acroparm

ech0 "\$NAMES_list $NAMES_list"
nl=`wc $NAMES_list | awk '{print $1}'`
ech0 "\$nl $nl"             #size of gnamelist


#if [ ".$1" == "." ] || [ ".$1" == ".--help" ]; then 
#  action=help            # help covered in wrapper part
#fi
ech0 "\$sub1 $sub1"
if [ "$sub1" == "show" ]; then
  action=show
fi
if [ ".$sub1" == ".0" ] || [ ".$sub1" == ".." ]; then 
  action=vimit
fi

if [ "$sub1" == "rep" ]; then
  action=overlay
  ech0 $action
fi

if [ "$sub1" == "add" ]; then
  action=extend
fi

if [ ".$parm1" == ".q" ]; then
     ech0 "locate $parm2"
     locate $parm2 > ~/tempname
     wc ~/tempname
     gg rep ~/tempname      # note NESTED call
     action=noop
fi
ech0 "\$action $action"

case "$action" in

"noop" )
  ;;

"vimit" )
  vim $NAMES_list       # /home/$USER/bin/gnamelistM
  ;;

"show" )
  list_by_number  $2
  ;;

"overlay" )
  echo "Replacing "$NAMES_list" with "$parm2
  ech0 "cat $parm2 > $NAMES_list"
  cat $parm2 > $NAMES_list
  ;;

"extend" )
  echo "Extend "$NAMES_list" with "$parm2
  cat $parm2 >> $NAMES_list
  ;;

 * )  # The default action  

if  is_integer $parm1; then
  if in_range $parm1; then
    theline=`head -n$parm1 $NAMES_list  | tail -n1`
    read -r thefile q1 q2 q3 rest <<< $theline
    ech0 "theline $thefile $q1 $q2 $q3" 
    
    # handle the ~
    if [ ".${thefile:0:1}" == ".~" ] ; then
      tailend=${thefile:1}
      thefile=$HOME$tailend
    fi
    
    cmd_action="vim"        # the default
    echo "default $cmd_action"
    
    # handle the parm lib overrides
    if [ ".$q1" != "." ]; then
       ech0 revise $cmd_action
       cmd_action="$q1 $q2 $q3"    # allow for 3 parm
       echo "parmlib $cmd_action"
    fi

    # handle the cmdline override
    if [ ".$parm2" != "." ]; then
       cmd_action="$parm2 $parm3 $parm4 "  # allow for 3 parm
       echo "cmdline $cmd_action"
    fi
    echo $cmd_action $thefile
    $cmd_action $thefile
    #     vim $thefile
  else
    echo $parm1 is NOT in RANGE  1 .. $nl
  fi
else
  echo "$parm1 is NOT an integer"
  echo "you hit the default - handle what is left"
  echo "how to handle  $parm1  is unknown "
fi
  ;;
esac

return       # back to gg wrapper call
}

#start of wi code <<====================
# collect and remember command line values
parm1=$1
parm2=$2
parm3=$3
parm4=$4

IFSsave=$IFS
IFS=" "
read -r exec_lib rest < $rchbls/execdir
read -r build_lib rest < $rchbls/builddir
IFS=$IFSsave


# insure directory of separate members. exists."
if [ -d $exec_lib/gg_acrolist_dir ]; then
    ech0 "subdir exists"
else
    ech0 "create the necessary subdir" 
    mkdir $exec_lib/gg_acrolist_dir
    touch $exec_lib/gg_acrolist_dir/firsttime  # default entry empty
    sleep 1
    echo "dummy placeholder0" > $exec_lib/gg_acrolist_dir/firsttime
fi
# setting the value of original current subdir
if [ -f $exec_lib/gg_acroname ]; then
    ech0 "filename of current subdir exists."  # skip setting
else
    ech0 "creating file for current subdir."
    touch $exec_lib/gg_acroname
    sleep 1              # time to populate (first time only)
    echo "firsttime" > $exec_lib/gg_acroname
fi

read -r current_gnamelist rest < $exec_lib/gg_acroname

if [ ".$parm1" == "." ]; then
  clear
  echo "Activate/Inactivate/choose the name of the gnamelist file in use."
  echo " on/ON  - prompts for the name"
  echo " off/OFF - clears the filename, resets to firsttime. "
  echo " null - display help and filename"
  echo " 0 or . - the gnamelist"
  echo " num- handle the num-th item "
  echo " rep file - overlay gnamelist with file"
  echo " add file - concate file to list."
  echo " "
  echo "Currently using ==>>$current_gnamelist in directory
  $rchbls/gg_acrolist_dir"
  echo " "
  echo -n "Choices: "
  ls $rchbls/gg_acrolist_dir
  exit 4
fi

p1=$parm1
if [ ".$p1" == ".off" ]; then 
  p1="OFF"
fi

if [ ".$p1" == ".OFF" ]; then 
  touch $exec_lib/gg_acroname
  sleep 1
  echo "firsttime" > $exec_lib/gg_acroname
  exit 
fi


if [ ".$p1" == ".on" ]; then
  p1="ON" 
fi

if [ ".$p1" == ".ON" ]; then 
   echo -n "Enter the acroparm file name : "
   read -r answer   rest
   acroparm=$answer 
   echo $acroparm > $exec_lib/gg_acroname # new curr dir
   echo "Using >"$acroparm" in $exec_lib/gg_acrolist_dir dir."
   if [ ! -f $exec_lib/gg_acrolist_dir/$acroparm ]; then
     echo "dummy placeholder" > $exec_lib/gg_acrolist_dir/$acroparm 
    fi
   exit
fi
read -r acroparm rest < $exec_lib/gg_acroname

echo "ggwork $acroparm $parm1 $parm2 $parm3 $parm4" # main  plus 3 overrides
ggwork $acroparm $parm1 $parm2 $parm3 $parm4 
echo "I have returned."

