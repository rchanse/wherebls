#!/usr/bin/env bash 

# function to copy at top and use ech0 (rather than ech1
function ech0 () {     # turn on debugging with  export ech0=ON
  if [ ".$ech0" == ".ON" ]; then
    echo $@
  fi  
}

if [ ".$1" == ".--help" ] ; then

cat << EOF-help

  This is the startup command the requirments are:
  the following should Match (all the same.

  1. Your pwd is the directory of your exec-lib
  2. The variable \$rchbls =  exec-lib
  3. The first word in  exec-lib/execdir 

  Currently  1. \$PWD = $PWD
             2. \$rchbls = $rchbls
             3. (in a moment.) 

  For example had you used the defaults of  whereisit/fubar
  Setting the above.
1. By cd -- your \$PWD is  /home/yourid/fubar (/home/$USER/fubar) 

2. You can set \$rchbls may be set by export command.
  export rchbls=/home/yourid/fubar    or
  export rchbls=/home/$USER/fubar     or
  export rchbls=~/fubar

3. Edit  exec-lib/exec-dir
EOF-help
return
fi

echo -n "Your pwd is $PWD, is this your exec-lib ( y/Y ) ?? : "
IFSsave=$IFS
IFS=" "
read answer rest
IFS=$IFSsave
if [ ".$answer" == ".y" ] || [ ".$answer" == ".Y" ]; then
  export rchbls=$PWD
else
  echo "Answer ( $answer ) is NOT  'y' or 'Y' "
  echo "Make sure you did 'cd your-execlib' "
  echo "You may wish to try  '. ./engage --help' "
  echo "Quiting, NO changes made. "
  return
fi


if [ ".$rchbls" == ".$PWD" ]; then
  ech0 "Das is gut!"
# return
else
  echo "Mismatch "

  echo "Currently  \$rchbls = $rchbls"
  echo "           \$PWD = $PWD"
  echo "try  . ./engage --help "

  return
fi


IFSsave=$IFS
IFS=" "
read -r exec_base rest < $rchbls/execdir
read -r build_base rest < $rchbls/builddir
IFS=$IFSsave

ech0 "\$rchbls = $rchbls "
ech0 "exec_base $exec_base"
ech0 "build_base $build_base"

if [ ".$exec_base" == ".$rchbls" ]; then
  ech0 "Also good"
else
  echo "Mismatch"
  echo "pwd       $PWD "
  echo "rchbls    $rchbls "
  echo "exec_base $exec_base "
  echo "Quiting.   Please read  '. ./engage --help'"
  return
fi

#safety
export rchbls=$rchbls
cd  $rchbls
#source  addpath0 $rchbls  nomsg
source  addpath0 .  nomsg
cd                                  # back home dir
#source  addpath0 $rchbls nomsg
#else
# cd $HOME/$build_base
# . addpath0 $build_base nomsg
#fi

clear
cat << EOF-modt
"How much Neanderthal blood do you have? - Robert C Hansen"


"The more they overthink the plumbing, the easier it is to stop 
up the drain." - Montgomery Scott 


"Google is YOUR friend!" -- Phil Bunch


"Captain, you are expecting me to work with equipment that is little
more than bearskins and stone knives." --  Mr. Spock


"'Make it so!' - Jean-Luc Picard"


Your path is now: $PATH
EOF-modt
#--------------------------------------

